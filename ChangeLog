6.2.1:

Two fixes:
Make hprofile to not change the profile state file for nothing;
And print a single profile for vga profile;

6.2.0:

Random fixes; major refactorization of {current,previous} profiles handling;
New message formatting; and clean ups.

6.1.3:

Cleaned color support, so, escape sequences can be used in profiles;
format nicely end messages.

6.1.2:

Added <PROFILE>/functions support to permit regrouping everything,
every profile file, in a single directory;
Sanitized disk-functions default to avoid burning disk.

6.1.1:

Fixed previous broken profile() and reverted a broken example
from previous release.

6.1.0:

and cleaned the variables mess by using clean and clear names.

6.0.0:

Converted the API to use a single PROFILE-functions instead of using
dozen of tiny files which greatly simplify profiles management.

5.0.0:

Converted the utility to plain POSIX shell script; and added
a set of better info helpers {info,error,warn,begin,end,yesno}.

4.2/3.2:

Added man page section 1.

4.1:

News: run-script minor fix/update following 3.1 version bump.

4.0:

API change:
	1. zsh scripts found in profile directory <profile-dir>/<script>.zsh
	   will be used to define function(s) of the same name.

3.1:

API change:
	1. now bash counter part define function of the same name of
	   <profile-dir>/<script>.bash (same API/functionalities as zsh/master).

3.0:

cleaned the mess to have a KISS script:
    1. no need to have multiple sub-shell to be able to move a few files and
	   run a few commands;
	2. speed/effiency wise, the previous version was a disaster, hopefully
	   this script was used for simple things;
	3. who need hundreds of lines to move a few files and exec a few cmds?!
API change:
    1. no +x executable bit needed anymore as everthing can be runned in a
	   single shell, so source-ing is prefered for efficiency/speed;
	2. as exececuted scripts are sourced, scripts have access to internal
	   helpers to use;
	3. <profile-dir>/{star,stop} are common scripts for profile scripts if
	   present, so those can be used as a common start/stop script;
	4. <profile-dir>/script_name.bash are recognized and script_name_bash
	   hold the path of the script, so those script can be used/sourced in
	   a nice and simple way (see disk profile);
	5. user profile are now properly handled in the same maner as system
	   profiles, there is a -u|--user=$USER to specify the specific user
	   so runtime profile is set to $HOME/.hprofile.
* numerous fixes/clean ups...

2.0_beta2: 25 Dec 2003
